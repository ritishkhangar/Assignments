11. Java Program to Check Alphabet using ternary operator

public class Alphabet {

    public static void main(String[] args) {

        char c = 'A';

        if( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
            System.out.println(c + " is an alphabet.");
        else
            System.out.println(c + " is not an alphabet.");
    }
}

A is an alphabet.



12. Java Program to Check Alphabet using isAlphabetic() Method

public class Alphabate {
  public static void main(String[] args) {
    char c = 'a';

    if (Character.isAlphabetic(c)) {
      System.out.println(c + " is an alphabet.");
    }
    else {
      System.out.println(c + " is not an alphabet.");
    }
  }
}

a is an alphabet.




13. Sum of Natural Numbers using for loop

public class SumNatural {

    public static void main(String[] args) {

        int num = 100, sum = 100;

        for(int i = 1; i <= num; ++i)
        {
            sum += i;
        }

        System.out.println("Sum = " + sum);
    }
}

Enter a limit : 100
Enter a limit : 100 

Sum = 5050





14. Sum of Natural Numbers using while loop

public class SumNatural {

    public static void main(String[] args) {

        int num = 100, i = 1, sum = 0;

        while(i <= num)
        {
            sum += i;
            i++;
        }

        System.out.println("Sum = " + sum);
    }
}
Enter a limit : 100 

Sum = 5050










15. Find Factorial of a number using for loop

public class FactorialExample
{  
 public static void main(String args[]){  
  int i,fact=1;  
  int number=10;  
  for(i=1;i<=number;i++){    
      fact=fact*i;    
  }    
  System.out.println("Factorial of "+number+" is: "+fact);    
 }  
}  

Enter a number : 10

Factorial of 10 = 3628800









16. Find Factorial of a number using BigInteger

import java.math.BigInteger;
public class BI {
    public static void main(String[] args) {
          System.out.println(factorial(30));
    }
    public static BigInteger factorial(int N)
    {
        BigInteger f = new BigInteger("1");
        for (int i = 2; i <= N; i++)
            f = f.multiply(BigInteger.valueOf(i));
        return f;
    }
}

Enter a number : 30

Factorial of 30 = 265252859812191058636308480000000







17. Find Factorial of a number using while loop

public class Factorial {

    public static void main(String[] args) 
{
        int number = 10;
        long fact = 1;
        int i = 1;
        while(i<=number)
        {
            fact = fact * i;
            i++;
        }
        System.out.println("Factorial of "+number+" is: "+fact);
    }
}
Enter a number : 10

Factorial of 10 = 3628800






18. Generate Multiplication Table using for loop

public class MultiplicationTable {

    public static void main(String[] args) {

        int num = 5;
        for(int i = 1; i <= 10; ++i)
        {
            System.out.printf("%d * %d = %d \n", num, i, num * i);
        }
    }
}
Enter a number : 5
5*1=5 5 * 2 = 10 5 * 3 = 15 5 * 4 = 20 5 * 5 = 25 5 * 6 = 30 5 * 7 = 35 5 * 8 = 40 5 * 9 = 45 5 * 10 = 50







19. Generate Multiplication Table using while loop

public class MultiplicationTable {

    public static void main(String[] args) {

        int num = 5, i = 1;
        while(i <= 10)
        {
            System.out.printf("%d * %d = %d \n", num, i, num * i);
            i++;
        }
    }
}
Enter a number : 5
5*1=5 5 * 2 = 10 5 * 3 = 15 5 * 4 = 20 5 * 5 = 25 5 * 6 = 30 5 * 7 = 35 5 * 8 = 40 5 * 9 = 45 5 * 10 = 50












20. Display Fibonacci Series Using for Loop

public class Fibonacci {
  public static void main(String[] args) {

    int n = 10, firstTerm = 0, secondTerm = 1;
    System.out.println("Fibonacci Series till " + n + " terms:");

    for (int i = 1; i <= n; ++i) {
      System.out.print(firstTerm + ", ");

     
      int nextTerm = firstTerm + secondTerm;
      firstTerm = secondTerm;
      secondTerm = nextTerm;
    }
  }
}

Enter the limit : 10

Fibonacci Series till 10 terms: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34,





21. Display Fibonacci series using while loop

public class Fibonacci {
  public static void main(String[] args) {

    int i = 1, n = 10, firstTerm = 0, secondTerm = 1;
    System.out.println("Fibonacci Series till " + n + " terms:");

    while (i <= n) {
      System.out.print(firstTerm + ", ");

      int nextTerm = firstTerm + secondTerm;
      firstTerm = secondTerm;
      secondTerm = nextTerm;

      i++;
    }
  }
}

Enter the limit : 10

Fibonacci Series till 10 terms: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34,









22. Display Fibonacci series up to a given number

public class Fibonacci {
  public static void main(String[] args) {

    int n = 25, firstTerm = 0, secondTerm = 1;
        
    System.out.println("Fibonacci Series Upto " + n + ": ");
    
    while (firstTerm <= n) {
      System.out.print(firstTerm + ", ");

      int nextTerm = firstTerm + secondTerm;
      firstTerm = secondTerm;
      secondTerm = nextTerm;

    }
  }
}
Enter the limit : 25

Fibonacci Series till 10 terms: 0, 1, 1, 2, 3, 5, 8, 13, 21,
biginit will be used