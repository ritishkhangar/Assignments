34. Calculate power of a number using a while loop

public class B {

	public static void main(String[] args) 
	{
               int base = 4, exponent = 2;

			    long result = 1;

			    while (exponent != 0) 
			    {
			      result *= base;
			      --exponent;
			    }

			    System.out.println("Answer = " + result);
			  }
}

O/P : 
Enter Base : 4
Enter Power : 2
4^2 = 16






35. Calculate the power of a number using a for loop

public class B 
{

	public static void main(String[] args) 
	{

	    int base = 4, exponent = 2;

	    long result = 1;

	    for (; exponent != 0; --exponent)
            {
	      result *= base;
	    }

	    System.out.println("Answer = " + result);
      }
}
O/P : 
Enter Base : 4
Enter Power : 2
4^2 = 16







36. Calculate the power of a number using pow() function

public class B {

	public static void main(String[] args) 
	{

		    int base = 4, exponent = 2;
		    double result = Math.pow(base, exponent);

		    System.out.println("Answer = " + result);
	}
}

O/P : 
Enter Base : 4
Enter Power : 2
4^2 = 16









37. Compute Power of Negative Number
O/P : 

public class B {

	public static void main(String[] args) 
	{

	int base = -4, exponent = 2;

    double result = Math.pow(base, exponent);
    System.out.println("Answer = " + result);
	}
}

Enter Base : -4
Enter Power : 2
4^2 = 16

*)
public class B {

	public static void main(String[] args) 
	{

	int base = -4, exponent = 3;

    double result = Math.pow(base, exponent);
    System.out.println("Answer = " + result);
	}
}
Enter Base : -4
Enter Power : 3
4^2 = -64










38. Java Program to Check Palindrome String

public class PalindromeString 
{

	public static void main(String[] args) 
	{
		String name = "ABCBA";
		String reverse = "";
		
		for(int i=name.length()-1 ; i>=0; i--)
		{
			reverse= reverse + name.charAt(i);
		}
		
		if(reverse.equals(name))
		{
			System.out.println(name + " is a palindrome string");
		}
		else
		{
			System.out.println(name + " is not a palindrome string");
		}

	}

}


O/P : 
Enter a String : ABCBA
It is a pallindrom String
AbcBA
Not pallindrom









39. Java Program to Check Palindrome Number

public class Palindrome {

	public static void main(String[] args) 
	{
		int num = 1221;  //store some number:
		int temp = num; // take a backup copy of the number:
		int rev = 0;    // is used to store reverse number:
		
		while(num>0)
		{
			int last = num%10;
			num = num/10;
			rev = (rev*10) + last;
		}
		
		if(rev == temp)
		{
			System.out.println(temp + " is Palindrome");
		}
		else
		{
			System.out.println(temp + " is not Palindroeme");
		}
	}
}

OP : 
Enter a number : 1221
It is a pallindrom number











40. Program to Check Prime Number using a for loop

public class PrimeNumber 
{

	public static void main(String[] args)
	{
		int num = 9;
		boolean isprime = true;
		
	for( int i=2; i<=num ; i++)
	{
		if(num%i == 0)
		{
			isprime = false;
			break;
		}
	}
	
	
	if(isprime)
	{
		System.out.println(num + "is prime");
	}
	else
	{
		System.out.println(num + " not prime");
	}
	
  }
}

O/P : 
Enter a number : 9 
9 is not prime

public class PrimeNumber 
{

	public static void main(String[] args)
	{
		int num = 7;
		boolean isprime = true;
		
	for( int i=2; i<=num ; i++)
	{
		if(num%i == 0)
		{
			isprime = false;
			break;
		}
	}
	
	
	if(isprime)
	{
		System.out.println(num + "is prime");
	}
	else
	{
		System.out.println(num + " not prime");
	}
	
  }
}

Enter a number : 7
7 is prime














41. Program to Check Prime Number using a while loop

import java.util.Scanner;
 
public class PrimeNumberChecker {
    public static void main(String[] args) {
        System.out.println("Enter a number to check Prime or Not");
        Scanner scanner = new Scanner(System.in);
        int number = scanner.nextInt();
        int i = 2, count = 0;
        while (i <= number / 2) {
            if (number % i == 0) {
                count++;
                break;
            }
            i++;
        }
        if (count == 0) {
            System.out.println(number + " is prime number");
        } else {
            System.out.println(number + " is not a prime number");
        }
    }
}
O/P : 
Enter a number : 9 
9 is not prime

Enter a number : 7
7 is prime












42. Display Prime Numbers Between Two Intervals

public class Prime {

    public static void main(String[] args) {

        int low = 1, high = 12;

        while (low < high) {
            boolean flag = false;

            for(int i = 2; i <= low/2; ++i) {
                // condition for nonprime number
                if(low % i == 0) {
                    flag = true;
                    break;
                }
            }

            if (!flag && low != 0 && low != 1)
                System.out.print(low + " ");

            ++low;
        }
    }
}

O/p : 
Enter Starting NUmber : 1
Enter Ending NUmber : 12

Prime numbers:
3, 5, 7, 11

Special : Ask User to input a number and check if its 
prime or not and you ask for the number till user enters a prime number.

import java.util.Scanner;
 
public class PrimeNumberChecker {
    public static void main(String[] args) {
        System.out.println("Enter a number to check Prime or Not");
        Scanner scanner = new Scanner(System.in);
        int number = scanner.nextInt();
        int i = 2, count = 0;
        while (i <= number / 2) {
            if (number % i == 0) {
                count++;
                break;
            }
            i++;
        }
        if (count == 0) {
            System.out.println(number + " is prime number");
        } else {
            System.out.println(number + " is not a prime number");
        }
    }
}

O/P : 
Enter a number : 4
4 is not prime 

Enter a number : 6
6 is not prime 
Enter a number : 8
8 is not prime 
Enter a number : 11
11 is prime


